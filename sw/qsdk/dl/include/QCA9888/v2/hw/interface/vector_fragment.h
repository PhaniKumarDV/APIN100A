// Copyright (c) 2014 Qualcomm Atheros, Inc.  All rights reserved.
// $ATH_LICENSE_HW_HDR_C$
//
// DO NOT EDIT!  This file is automatically generated
//               These definitions are tied to a particular hardware layout


#ifndef _VECTOR_FRAGMENT_H_
#define _VECTOR_FRAGMENT_H_
#if !defined(__ASSEMBLER__)
#endif

// ################ START SUMMARY #################
//
//	Dword	Fields
//	0	dword_0[31:0]
//	1	dword_1[31:0]
//	2	dword_2[31:0]
//	3	dword_3[31:0]
//	4	dword_4[31:0]
//	5	dword_5[31:0]
//	6	dword_6[31:0]
//	7	dword_7[31:0]
//
// ################ END SUMMARY #################

#define NUM_OF_DWORDS_VECTOR_FRAGMENT 8

struct vector_fragment {
    volatile uint32_t dword_0                         : 32; //[31:0]
    volatile uint32_t dword_1                         : 32; //[31:0]
    volatile uint32_t dword_2                         : 32; //[31:0]
    volatile uint32_t dword_3                         : 32; //[31:0]
    volatile uint32_t dword_4                         : 32; //[31:0]
    volatile uint32_t dword_5                         : 32; //[31:0]
    volatile uint32_t dword_6                         : 32; //[31:0]
    volatile uint32_t dword_7                         : 32; //[31:0]
};

/*

dword_0
			
			1st dword of next fragment of vector frame. Fragments
			always start on a dword boundary.  <legal all>

dword_1
			
			2nd dword of next fragment of vector frame (optional on
			last fragment)  <legal all>

dword_2
			
			3rd dword of next fragment of vector frame (optional on
			last fragment)  <legal all>

dword_3
			
			4th dword of next fragment of vector frame (optional on
			last fragment)  <legal all>

dword_4
			
			5th dword of next fragment of vector frame (optional on
			last fragment)  <legal all>

dword_5
			
			6th dword of next fragment of vector frame (optional on
			last fragment)  <legal all>

dword_6
			
			7th dword of next fragment of vector frame (optional on
			last fragment) <legal all>

dword_7
			
			8th dword of next fragment of vector frame (optional on
			last fragment)  <legal all>
*/


/* Description		VECTOR_FRAGMENT_0_DWORD_0
			
			1st dword of next fragment of vector frame. Fragments
			always start on a dword boundary.  <legal all>
*/
#define VECTOR_FRAGMENT_0_DWORD_0_OFFSET                             0x00000000
#define VECTOR_FRAGMENT_0_DWORD_0_LSB                                0
#define VECTOR_FRAGMENT_0_DWORD_0_MASK                               0xffffffff

/* Description		VECTOR_FRAGMENT_1_DWORD_1
			
			2nd dword of next fragment of vector frame (optional on
			last fragment)  <legal all>
*/
#define VECTOR_FRAGMENT_1_DWORD_1_OFFSET                             0x00000004
#define VECTOR_FRAGMENT_1_DWORD_1_LSB                                0
#define VECTOR_FRAGMENT_1_DWORD_1_MASK                               0xffffffff

/* Description		VECTOR_FRAGMENT_2_DWORD_2
			
			3rd dword of next fragment of vector frame (optional on
			last fragment)  <legal all>
*/
#define VECTOR_FRAGMENT_2_DWORD_2_OFFSET                             0x00000008
#define VECTOR_FRAGMENT_2_DWORD_2_LSB                                0
#define VECTOR_FRAGMENT_2_DWORD_2_MASK                               0xffffffff

/* Description		VECTOR_FRAGMENT_3_DWORD_3
			
			4th dword of next fragment of vector frame (optional on
			last fragment)  <legal all>
*/
#define VECTOR_FRAGMENT_3_DWORD_3_OFFSET                             0x0000000c
#define VECTOR_FRAGMENT_3_DWORD_3_LSB                                0
#define VECTOR_FRAGMENT_3_DWORD_3_MASK                               0xffffffff

/* Description		VECTOR_FRAGMENT_4_DWORD_4
			
			5th dword of next fragment of vector frame (optional on
			last fragment)  <legal all>
*/
#define VECTOR_FRAGMENT_4_DWORD_4_OFFSET                             0x00000010
#define VECTOR_FRAGMENT_4_DWORD_4_LSB                                0
#define VECTOR_FRAGMENT_4_DWORD_4_MASK                               0xffffffff

/* Description		VECTOR_FRAGMENT_5_DWORD_5
			
			6th dword of next fragment of vector frame (optional on
			last fragment)  <legal all>
*/
#define VECTOR_FRAGMENT_5_DWORD_5_OFFSET                             0x00000014
#define VECTOR_FRAGMENT_5_DWORD_5_LSB                                0
#define VECTOR_FRAGMENT_5_DWORD_5_MASK                               0xffffffff

/* Description		VECTOR_FRAGMENT_6_DWORD_6
			
			7th dword of next fragment of vector frame (optional on
			last fragment) <legal all>
*/
#define VECTOR_FRAGMENT_6_DWORD_6_OFFSET                             0x00000018
#define VECTOR_FRAGMENT_6_DWORD_6_LSB                                0
#define VECTOR_FRAGMENT_6_DWORD_6_MASK                               0xffffffff

/* Description		VECTOR_FRAGMENT_7_DWORD_7
			
			8th dword of next fragment of vector frame (optional on
			last fragment)  <legal all>
*/
#define VECTOR_FRAGMENT_7_DWORD_7_OFFSET                             0x0000001c
#define VECTOR_FRAGMENT_7_DWORD_7_LSB                                0
#define VECTOR_FRAGMENT_7_DWORD_7_MASK                               0xffffffff


#endif // _VECTOR_FRAGMENT_H_
