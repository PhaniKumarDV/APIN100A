/* Copyright (c) 2015, The Linux Foundation. All rights reserved.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

#include "qcom-ipq40xx.dtsi"
#include <dt-bindings/input/input.h>
#include <dt-bindings/gpio/gpio.h>

/ {
	model = "Qualcomm Technologies, Inc. IPQ40xx/AP-DK01.1";
	compatible = "qcom,ipq40xx-apdk01.1", "qcom,ipq40xx";

	memory {
		device_type = "memory";
		reg = <0x80000000 0x10000000>; /* 256MB */
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;
		rsvd1@87000000 {
			/* Reserved for other subsystem */
			reg = <0x87000000 0x500000>;
			no-map;
		};
		wifi_dump@87500000 {
			reg = <0x87500000 0x600000>;
			no-map;
		};
		rsvd2@87B00000 {
			/* Reserved for other subsystem */
			reg = <0x87B00000 0x500000>;
			no-map;
		};
	};

	chosen {
		bootargs-append = " clk_ignore_unused";
	};

};
	&soc {
		pinctrl@0x01000000 {
			mdio_pins: mdio_pinmux {
				mux_1 {
					pins = "gpio53";
					function = "mdio1";
					bias-bus-hold;
				};
				mux_2 {
					pins = "gpio52";
					function = "mdc";
					bias-bus-hold;
				};
			};

			serial_pins: serial_pinmux {
				mux {
					pins = "gpio60", "gpio61";
					function = "blsp_uart0";
					bias-disable;
				};
			};

			spi_0_pins: spi_0_pinmux {
				mux {
					pins = "gpio54", "gpio55", "gpio56", "gpio57";
					function = "blsp_spi0";
					bias-disable;
				};
			};
			i2c_0_pins: i2c_0_pinmux {
				mux {
					pins = "gpio58", "gpio59";
					function = "blsp_i2c0";
					bias-disable;
				};
			};
			keys_pins: keys_pinmux {
				/* In ipq40xx, gpio config 0x2 corresponds to
				 * internal pull up. In pinctrl driver,
				 * bias-bus-hold corresponds to 0x2 */
				mux {
					pins = "gpio63";
					bias-bus-hold;
				};
				mux_wps {
					pins = "gpio62";
					function = "gpio";
					bias-bus-hold;
				};
			};
			
			gpio_led_pins: gpio_led_pinmux {
				ap_status {
					pins = "gpio0";
					output-low;
				};
/*
				wlan24 {
					pins = "gpio1";
					output-low;
				};
				wlan5 {
					pins = "gpio2";
                    output-low;
				};
*/
				lan1 {
					pins = "gpio4";
                    output-low;
				};
				lan2 {
					pins = "gpio5";
					output-low;
				};
			
			};
		};

		serial@78af000 {
			pinctrl-0 = <&serial_pins>;
			pinctrl-names = "default";
			status = "ok";
		};

		spi_0: spi@78b5000 { /* BLSP1 QUP1 */
			pinctrl-0 = <&spi_0_pins>;
			pinctrl-names = "default";
			status = "ok";

			m25p80@0 {
				#address-cells = <1>;
				#size-cells = <1>;
				compatible = "n25q128a11";
				reg = <0>;
				linux,modalias = "m25p80", "n25q128a11";
				spi-max-frequency = <24000000>;
				use-default-sizes;
			};
		};

		tcsr: tcsr@194b000 {
			status = "ok";
		};

		usb3_ss_phy: ssphy@0 {
			status = "ok";
		};

		dummy_ss_phy: ssphy@1 {
			status = "ok";
		};

		usb3_hs_phy: hsphy@a6000 {
			status = "ok";
		};

		usb2_hs_phy: hsphy@a8000 {
			status = "ok";
		};

		usb3: usb3@8a00000 {
			status = "ok";
		};

		usb2: usb2@6000000 {
			status = "ok";
		};

		qcom_crypto: qcrypto@8e20000 {
			status = "ok";
		};

		qcom_cedev: qcedev@8e20000 {
			status = "ok";
		};

		ess-switch@c000000 {
			switch_mac_mode = <0x0>; /* mac mode for RGMII RMII */
			switch_initvlas = <
				0x0007c 0x54 /* PORT0_STATUS */
			>;
		};
		i2c_0: i2c@78b7000 { /* BLSP1 QUP2 */
			pinctrl-0 = <&i2c_0_pins>;
			pinctrl-1 = <&i2c_0_pins>;
			pinctrl-names = "i2c_active", "i2c_sleep";
			status = "ok";

			t_sensor_fl: lm75@4a{
				compatible = "philips,lm75";
				reg = <0x4a>;
				status = "ok";
			};
			t_sensor_fr: lm75@49{
				compatible = "philips,lm75";
				reg = <0x49>;
				status = "ok";
			};
			t_sensor_rl: lm75@4b{
				compatible = "philips,lm75";
				reg = <0x4b>;
				status = "ok";
			};
			t_sensor_rr: lm75@48{
				compatible = "philips,lm75";
				reg = <0x48>;
				status = "ok";
			};

		};
		gpio_keys {
			pinctrl-0 = <&keys_pins>;
			pinctrl-names = "default";
			compatible = "gpio-keys";

			button@1 {
				label = "rst";
				linux,code = <KEY_RESTART>;
				gpios = <&tlmm 63 GPIO_ACTIVE_LOW>;
				linux,input-type = <1>;
			};
			button@2 {
				label = "wps";
				linux,code = <KEY_WPS_BUTTON>;
				gpios = <&tlmm 62 GPIO_ACTIVE_HIGH>;
				linux,input-type = <1>;
			};
			
		};
		
		gpio_led {
			pinctrl-0 = <&gpio_led_pins>;
			pinctrl-names = "default";
			status = "ok";
		};
		
		wifi0: wifi@a000000 {
			wifi-led-gpios = <&tlmm 1 GPIO_ACTIVE_LOW>;
		};

		wifi1: wifi@a800000 {
			wifi-led-gpios = <&tlmm 2 GPIO_ACTIVE_LOW>;
		};

	};
