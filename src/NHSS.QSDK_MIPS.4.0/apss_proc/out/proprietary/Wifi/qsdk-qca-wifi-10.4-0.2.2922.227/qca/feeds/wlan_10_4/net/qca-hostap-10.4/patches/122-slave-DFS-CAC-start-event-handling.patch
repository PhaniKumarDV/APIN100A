diff --git a/src/drivers/driver.h b/src/drivers/driver.h
index ed8a00e..7994118 100644
--- a/src/drivers/driver.h
+++ b/src/drivers/driver.h
@@ -4564,6 +4564,7 @@ union wpa_event_data {
 		enum chan_width chan_width;
 		int cf1;
 		int cf2;
+        int timeout;
 	} dfs_event;
 
 	/**
diff --git a/src/drivers/driver_athr.c b/src/drivers/driver_athr.c
index 19dd5c8..05e92e4 100644
--- a/src/drivers/driver_athr.c
+++ b/src/drivers/driver_athr.c
@@ -568,6 +568,7 @@ driver_atheros_event_wireless_custom(struct driver_atheros_data *drv,
 			os_strstr(custom, " unicast ") != NULL;
 		/* TODO: parse parameters(?) */
 		wpa_supplicant_event(ctx, EVENT_MICHAEL_MIC_FAILURE, &data);
+
 	} else if (os_strncmp(custom, "ASSOCINFO(ReqIEs=", 17) == 0) {
 		char *spos;
 		int bytes;
@@ -662,7 +663,21 @@ driver_atheros_event_wireless_custom(struct driver_atheros_data *drv,
 
 		wpa_supplicant_event(ctx, EVENT_WNM, &data);
 #endif /* CONFIG_IEEE80211V */
-	}
+	} else if (os_strncmp(custom, "CAC.started", 11) ==
+           0) {
+		char *cac;
+		cac = os_strstr(custom, "freq=");
+        if (cac) {
+            data.dfs_event.freq = atoi(cac+5);                
+        }
+
+        cac = os_strstr(custom, "timeout=");
+        if (cac) {
+            data.dfs_event.timeout = atoi(cac+8);                
+        }
+
+        wpa_supplicant_event(ctx, EVENT_DFS_CAC_STARTED, &data);
+    }
 }
 
 
diff --git a/wpa_supplicant/events.c b/wpa_supplicant/events.c
index 3af1c7d..2f6baba 100644
--- a/wpa_supplicant/events.c
+++ b/wpa_supplicant/events.c
@@ -2063,6 +2063,13 @@ static int wpa_supplicant_assoc_update_ie(struct wpa_supplicant *wpa_s)
 }
 
 
+static void wpa_supplicant_event_dfs_start(struct wpa_supplicant *wpa_s,
+                       struct dfs_event *radar)
+{
+	wpa_printf(MSG_DEBUG, "DFS CAC started on  %d MHz timout %d",radar->freq,radar->timeout+10);	
+	wpa_supplicant_req_auth_timeout(wpa_s, (radar->timeout+10), 0);
+}
+
 static void wpa_supplicant_event_assoc(struct wpa_supplicant *wpa_s,
 				       union wpa_event_data *data)
 {
@@ -3472,8 +3492,13 @@ void wpa_supplicant_event(void *ctx, enum wpa_event_type event,
 			wpas_event_dfs_radar_detected(wpa_s, &data->dfs_event);
 		break;
 	case EVENT_DFS_CAC_STARTED:
-		if (data)
-			wpas_event_dfs_cac_started(wpa_s, &data->dfs_event);
+		if (data){
+            if (wpa_s->ap_iface && wpa_s->ap_iface->bss[0])
+			    wpas_event_dfs_cac_started(wpa_s, &data->dfs_event);
+            else
+                wpa_supplicant_event_dfs_start(wpa_s, &data->dfs_event);
+        }            
+        wpa_msg(wpa_s, MSG_DEBUG, "EVENT_DFS_CAC_STARTED");
 		break;
 	case EVENT_DFS_CAC_FINISHED:
 		if (data)
